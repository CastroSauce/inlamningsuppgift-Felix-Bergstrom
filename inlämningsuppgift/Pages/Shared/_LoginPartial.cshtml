@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager





<ul class=" d-flex flex-md-column flex-lg-row">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="rd-nav-item">
            <a id="manage" class="rd-nav-link" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">@UserManager.GetUserName(User)</a>
        </li>
        <li class="rd-nav-item">
            <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/Index", new { area = "" })">
                <button id="logout" type="submit" class="rd-nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>

        @if (User.IsInRole("Admin"))
        {
           <li class="rd-nav-item"><partial name="_EditToolsPartial"/></li>
        }

    }
    else
    {
        <li class=" rd-nav-item">
            <a class="rd-nav-link " id="register " asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class=" rd-nav-item">
            <a class="rd-nav-link" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
